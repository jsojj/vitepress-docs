import{_ as s,c as i,o as a,a3 as t}from"./chunks/framework.B0izzCxm.js";const u=JSON.parse('{"title":"eslint + Git hooks(钩子)","description":"","frontmatter":{},"headers":[],"relativePath":"guide/devOps/defect-control/eslint-git.md","filePath":"guide/devOps/defect-control/eslint-git.md","lastUpdated":1722913783000}'),e={name:"guide/devOps/defect-control/eslint-git.md"},n=t(`<h1 id="eslint-git-hooks-钩子" tabindex="-1">eslint + Git hooks(钩子) <a class="header-anchor" href="#eslint-git-hooks-钩子" aria-label="Permalink to &quot;eslint + Git hooks(钩子)&quot;">​</a></h1><ul><li>使用 <code>lint-staged</code> 和 <code>husky</code> 在代码提交前做限制。</li><li>使用 git 钩子 <code>pre-commit</code>，未格式化的代码，在提交到 git 仓库前，会有警告提示。</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> husky</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lint-staged</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 生成husky文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> husky</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre></div><ul><li>将以下内容添加到你的 <code>package.json</code></li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;lint-staged&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;**/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;prettier --write --ignore-unknown&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,5),l=[n];function p(h,o,d,k,c,r){return a(),i("div",null,l)}const E=s(e,[["render",p]]);export{u as __pageData,E as default};
