import{_ as e,c as a,o as t,a3 as o}from"./chunks/framework.B0izzCxm.js";const p=JSON.parse('{"title":"跨域代理","description":"","frontmatter":{},"headers":[],"relativePath":"guide/http/server/index.md","filePath":"guide/http/server/index.md","lastUpdated":1721986402000}'),i={name:"guide/http/server/index.md"},r=o('<h1 id="跨域代理" tabindex="-1">跨域代理 <a class="header-anchor" href="#跨域代理" aria-label="Permalink to &quot;跨域代理&quot;">​</a></h1><ul><li>当一个请求url的<code>协议、域名、端口</code>三者之间任意一个与当前页面url不同时就会造成跨域。</li></ul><h2 id="解决跨域" tabindex="-1">解决跨域 <a class="header-anchor" href="#解决跨域" aria-label="Permalink to &quot;解决跨域&quot;">​</a></h2><h3 id="vue-proxy-正向代理" tabindex="-1">vue proxy 正向代理 <a class="header-anchor" href="#vue-proxy-正向代理" aria-label="Permalink to &quot;vue proxy 正向代理&quot;">​</a></h3><ul><li>正向代理：“一台代理服务器&quot;代替了&quot;客户端”，去和&quot;目标服务器&quot;进行交互，即<code>代理客户端</code>。</li><li>用途：隐藏客户端真实IP，突破限制访问外国网站。</li><li><a href="./vue-proxy.html">页面地址</a></li></ul><h3 id="nginx-反向代理" tabindex="-1">Nginx 反向代理 <a class="header-anchor" href="#nginx-反向代理" aria-label="Permalink to &quot;Nginx 反向代理&quot;">​</a></h3><ul><li>反向代理：“一台代理服务器&quot;代替了&quot;目标服务器”，去和&quot;客户端&quot;进行交互，即<code>代理服务端</code>。</li><li>用途：隐藏服务器真实IP，提供负载平衡，即指向后端的多台服务器中空闲的一台。</li><li><a href="./nginx.html">页面地址</a></li></ul>',7),l=[r];function n(d,u,c,h,s,_){return t(),a("div",null,l)}const q=e(i,[["render",n]]);export{p as __pageData,q as default};
