import{_ as s,c as i,o as a,a3 as l,a7 as e,a8 as t}from"./chunks/framework.B0izzCxm.js";const C=JSON.parse('{"title":"版本控制","description":"","frontmatter":{},"headers":[],"relativePath":"guide/devOps/git/index.md","filePath":"guide/devOps/git/index.md","lastUpdated":1723019316000}'),h={name:"guide/devOps/git/index.md"},n=l(`<h1 id="版本控制" tabindex="-1">版本控制 <a class="header-anchor" href="#版本控制" aria-label="Permalink to &quot;版本控制&quot;">​</a></h1><ul><li>常用的 Git 平台：github 国外、gitea 国内、gitee 国内、gitlab 国外（一体化 DevOps 平台）</li><li><code>Git</code>是分布式代码版本控制管理，可以在本地代码版本控制</li><li><code>SVN</code>需要联网</li><li><a href="https://gitforwindows.org/" target="_blank" rel="noreferrer">下载地址</a></li></ul><h2 id="https的仓库地址" tabindex="-1">HTTPS的仓库地址 <a class="header-anchor" href="#https的仓库地址" aria-label="Permalink to &quot;HTTPS的仓库地址&quot;">​</a></h2><ul><li>HTTPS 每次使用，都需要输入用户名和密码</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 全局设置你的git用户名称和用户邮箱，仅表明git提交身份，与github、gitee上注册的可以不一样</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 这两个命令在Git中唯一标识了你这台主机系统，因此可以在系统的任何地方进行git操作</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Your Name&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.email</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;email@example.com&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 配置完后，可通过如下命令查看用户名、邮箱</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.name</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.email</span></span></code></pre></div><h2 id="ssh密钥的仓库地址" tabindex="-1">SSH密钥的仓库地址 <a class="header-anchor" href="#ssh密钥的仓库地址" aria-label="Permalink to &quot;SSH密钥的仓库地址&quot;">​</a></h2><h3 id="生成ssh" tabindex="-1">生成ssh <a class="header-anchor" href="#生成ssh" aria-label="Permalink to &quot;生成ssh&quot;">​</a></h3><ul><li>生成<code>.ssh</code>目录，包含<code>id_rsa</code>密钥对的私钥，<code>id_rsa.pub</code>密钥对的公钥</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -t rsa: 指定生成RSA（非对称加密类型）密钥对</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -c email@example.com：用于标识该密钥对的所有者</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 不指定固定邮箱，一直回车即可</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa</span></span></code></pre></div><h3 id="gitee、github配置ssh" tabindex="-1">gitee、github配置ssh <a class="header-anchor" href="#gitee、github配置ssh" aria-label="Permalink to &quot;gitee、github配置ssh&quot;">​</a></h3><ul><li>gitee</li></ul><ol><li>把<code>id_rsa.pub</code>密钥填入gitee的SSH公钥 -&gt; 点确定</li><li>验证gitee的密钥是否成功</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在你电脑的任何地方打开git bash窗口，输入如下命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@gitee.com</span></span></code></pre></div><ul><li>github</li></ul><ol><li>把<code>id_rsa.pub</code>密钥填入github的SSH Keys -&gt; 点Add SSH key</li><li>验证github的密钥是否成功</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在你电脑的任何地方打开git bash窗口，输入如下命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com</span></span></code></pre></div><h3 id="删除ssh" tabindex="-1">删除ssh <a class="header-anchor" href="#删除ssh" aria-label="Permalink to &quot;删除ssh&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. win+R 打开cmd</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. 删除</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">del</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\U</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sers</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\Y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">our-Username</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">d_rsa</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">del</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\U</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sers</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\Y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">our-Username</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">d_rsa.pub</span></span></code></pre></div><h3 id="关闭ssh功能" tabindex="-1">关闭ssh功能 <a class="header-anchor" href="#关闭ssh功能" aria-label="Permalink to &quot;关闭ssh功能&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. 打开git配置文件进行编辑</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 方法一：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --edit</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 方法二：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">直接打开</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\U</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sers</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\Y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">our-Username</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">gitconfig</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 进行编辑</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. 删除如下内容</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#[url &quot;git@github.com:&quot;]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># insteadOf = https://github.com/</span></span></code></pre></div><h2 id="修改默认git账号" tabindex="-1">修改默认git账号 <a class="header-anchor" href="#修改默认git账号" aria-label="Permalink to &quot;修改默认git账号&quot;">​</a></h2><p><img src="`+e+'" alt="window修改默认git账号"></p><h2 id="语义化版本" tabindex="-1">语义化版本 <a class="header-anchor" href="#语义化版本" aria-label="Permalink to &quot;语义化版本&quot;">​</a></h2><h3 id="版本格式" tabindex="-1">版本格式 <a class="header-anchor" href="#版本格式" aria-label="Permalink to &quot;版本格式&quot;">​</a></h3><p><img src="'+t+`" alt="版本格式"></p><h3 id="版本名称" tabindex="-1">版本名称 <a class="header-anchor" href="#版本名称" aria-label="Permalink to &quot;版本名称&quot;">​</a></h3><ul><li><code>alpha</code> 内部测试版本，除非是内部测试人员，否则不推荐使用，有很多 bug</li><li><code>beta</code> 公测版本，消除了严重错误，还是会有缺陷，这个阶段还会持续加入新的功能</li><li><code>rc</code> 发行候选版本，这个版本不会加入新的功能，主要是排错，修改 bug</li><li><code>release</code> 发行的版本</li></ul><h2 id="pull-requests-pr" tabindex="-1">Pull Requests（PR） <a class="header-anchor" href="#pull-requests-pr" aria-label="Permalink to &quot;Pull Requests（PR）&quot;">​</a></h2><ul><li>源分支：修改过后的分支（branch1 分支）</li><li>目标分支：想要合并过去的分支（develop 分支）</li><li>删除 Pull Requests 记录：删除新分支</li><li>拉取新分支，新建 Pull Request，团队可以进行代码审查，审查通过后可以合并新分支的代码</li><li>一个分支，对应一个 Pull Request，后续提交的 git 会记录在 Pull Request</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 新增pull request操作步骤</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 先push分支branch1内容（步骤看分支管理）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 然后在gitee新增pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> request</span></span></code></pre></div><h2 id="生成-gitignore" tabindex="-1">生成.gitignore <a class="header-anchor" href="#生成-gitignore" aria-label="Permalink to &quot;生成.gitignore&quot;">​</a></h2><ol><li><a href="https://gitignore.io/" target="_blank" rel="noreferrer">线上生成</a></li><li>vscode 插件：.gitignore generrator（快捷搜索 generate）</li></ol><h2 id="gui-工具" tabindex="-1">GUI 工具 <a class="header-anchor" href="#gui-工具" aria-label="Permalink to &quot;GUI 工具&quot;">​</a></h2><ol><li>sourcetree</li><li>vscode 插件：GitLens</li></ol>`,34),p=[n];function k(r,d,g,o,c,F){return a(),i("div",null,p)}const b=s(h,[["render",k]]);export{C as __pageData,b as default};
