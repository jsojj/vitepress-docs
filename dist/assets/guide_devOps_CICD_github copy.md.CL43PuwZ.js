import{_ as s,c as i,o as a,a3 as l}from"./chunks/framework.B0izzCxm.js";const g=JSON.parse('{"title":"Github Actions","description":"","frontmatter":{},"headers":[],"relativePath":"guide/devOps/CICD/github copy.md","filePath":"guide/devOps/CICD/github copy.md","lastUpdated":1722936797000}'),n={name:"guide/devOps/CICD/github copy.md"},t=l(`<h1 id="github-actions" tabindex="-1">Github Actions <a class="header-anchor" href="#github-actions" aria-label="Permalink to &quot;Github Actions&quot;">​</a></h1><ul><li>介绍：Github Actions 是 Github 推出的持续集成（CI）服务，它提供了配置虚拟服务器环境，基于它可以进行构建、测试、打包、部署项目。</li></ul><h2 id="环境" tabindex="-1">环境 <a class="header-anchor" href="#环境" aria-label="Permalink to &quot;环境&quot;">​</a></h2><ol><li><p>硬件环境：Github Actions 为每个任务（job）都提供一个虚拟机来执行，每台虚拟机都有相同的硬件资源。2-core CPU、7GB 内存、14GB 硬盘空间。</p></li><li><p>使用限制：</p><ul><li>每个仓库只能同时支持 20 个工作流（workflow）并行</li><li>每小时可以调用 1000 次 Github API</li><li>每个 job 最多执行 6 个小时</li><li>私有仓库每月累计使用时间为 2000 分钟，超时计费，公共仓库无限制</li></ul></li></ol><h2 id="github-pages-自动化发布" tabindex="-1">Github Pages 自动化发布 <a class="header-anchor" href="#github-pages-自动化发布" aria-label="Permalink to &quot;Github Pages 自动化发布&quot;">​</a></h2><ul><li>github 加速：dev-sidecar 插件</li><li>手动部署，选择<code>Re-run all jobs</code></li></ul><ol><li>创建空的公共仓库</li><li>选择<code>Actions</code>，选择<code>Suggested for this repository</code> -&gt; <code>Configure</code>进行配置 <ul><li>自动创建模板：.github/workflows/main.yml</li><li>触发条件（on）：仓库事件（pull、push 等）、定时触发、手动触发、API</li></ul></li><li>选择<code>Marketplace</code> -&gt; <code>Setup Node.js environment</code>模板进行配置</li><li>提交生成的.yml 文件</li><li>本地拉取仓库创建项目，提交代码</li><li>选择<code>Settings</code> -&gt; <code>Pages</code> 手动选择分支部署</li><li>每次 push 代码时，即可自动部署</li></ol><p>或</p><ol><li>本地创建项目，提交代码</li><li>在 github 平台搜索<code>github page</code>，参考别人写的</li><li>在项目根目录手动创建模板：.github/workflows/main.yml 并提交</li><li>选择<code>Settings</code> -&gt; <code>Pages</code> 手动选择分支部署</li><li>每次 push 代码时，即可自动部署</li></ol><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">build-github-actions</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Github Actions名称</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 触发条件:push事件触发</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">jobs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 任务</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  build-and-deploy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    runs-on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ubuntu-latest</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 运行环境</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 命令</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">checkout</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # action</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/checkout@v3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # action</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">build</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # action</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          npm install</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          npm run build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">deploy</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # action</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/setup-node@v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          branch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">gh-pages</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #将分支设置成发布的仓库代码</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          folder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">dist</span></span></code></pre></div>`,10),h=[t];function e(p,k,d,o,r,E){return a(),i("div",null,h)}const u=s(n,[["render",e]]);export{g as __pageData,u as default};
