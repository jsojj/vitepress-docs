import{_ as t,c as e,o as a,a3 as s,ai as i}from"./chunks/framework.B0izzCxm.js";const g=JSON.parse('{"title":"SSR","description":"","frontmatter":{},"headers":[],"relativePath":"guide/frame-vue/SSR/index.md","filePath":"guide/frame-vue/SSR/index.md","lastUpdated":1719562339000}'),n={name:"guide/frame-vue/SSR/index.md"},l=s(`<h1 id="ssr" tabindex="-1">SSR <a class="header-anchor" href="#ssr" aria-label="Permalink to &quot;SSR&quot;">​</a></h1><ul><li><code>Server-Side Rendering(SSR)</code>服务端渲染，是用户第一次请求或刷新页面时，由服务器响应 html 字符串，可以省去浏览器首次渲染的工作，加快首屏显示速度。</li></ul><h2 id="vue-ssr-方案" tabindex="-1">vue SSR 方案 <a class="header-anchor" href="#vue-ssr-方案" aria-label="Permalink to &quot;vue SSR 方案&quot;">​</a></h2><ul><li>vue-server-render</li></ul><h2 id="nuxt-js-框架" tabindex="-1">Nuxt.js 框架 <a class="header-anchor" href="#nuxt-js-框架" aria-label="Permalink to &quot;Nuxt.js 框架&quot;">​</a></h2><h3 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h3><ul><li>Nuxt.js 是一个基于 Vue.js 的通用应用框架。</li><li>预设了利用 Vue.js 开发服务端渲染所需要的各种配置。</li><li>提供静态站点、异步数据加载（asyncData）、中间件支持（middleware 目录）、布局支持（layouts 目录）等。</li><li>简单的来说，Nuxt.js 就是基于原有的通用应用框架（如 vue 或 react）， 通过对客户端/服务端基础架构的抽象组织，进行应用的 UI 渲染。</li></ul><table><thead><tr><th>分类</th><th style="text-align:center;">Vue.js</th><th>Nuxt.js</th></tr></thead><tbody><tr><td>框架</td><td style="text-align:center;">独立框架</td><td>基于Vue.js，不仅用于服务端渲染，还进行了丰富</td></tr><tr><td>生命周期</td><td style="text-align:center;">全</td><td>只有created, beforeCreated</td></tr><tr><td>组件</td><td style="text-align:center;">router-view, router-link</td><td>nuxt, nuxt-child, nuxt-link, client-only</td></tr><tr><td>路由</td><td style="text-align:center;">自定义</td><td>由文件名、文件夹自动生成</td></tr><tr><td>目录结构</td><td style="text-align:center;">自定义</td><td>相对限定，不同的文件名不同的默认行为</td></tr><tr><td>第三方库</td><td style="text-align:center;">自定义</td><td>需求分浏览器与Node侧</td></tr><tr><td>其他</td><td style="text-align:center;">CLI集成了vuex, router</td><td>Prettier, UI框架等</td></tr></tbody></table><h3 id="创建项目" tabindex="-1">创建项目 <a class="header-anchor" href="#创建项目" aria-label="Permalink to &quot;创建项目&quot;">​</a></h3><ul><li>可自动生成路由</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用npx（npm &gt; 5.2.0）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-nuxt-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project-name</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用yarn</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nuxt-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project-name</span></span></code></pre></div><p><img src="`+i+'" alt="创建项目"></p>',12),r=[l];function d(h,o,c,p,u,k){return a(),e("div",null,r)}const _=t(n,[["render",d]]);export{g as __pageData,_ as default};
